import aes

def dump(block):
    for word in block:
        a = hex(word[0] << 24 | word[1] << 16 | word[2] << 8 | word[3])
        print(a)
            

def main():
    kb = [ 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c]
    
    key = bytearray(kb)
    
    data = [
        [0x32, 0x43, 0xf6, 0xa8],
        [0x88, 0x5a, 0x30, 0x8d],
        [0x31, 0x31, 0x98, 0xa2],
        [0xe0, 0x37, 0x07, 0x34]]

    exp_key = aes.rijndael.key_expansion(key)
    output = aes.rijndael.cipher(data, exp_key)

    dump(output)

                   

if __name__ == "__main__":
    main()